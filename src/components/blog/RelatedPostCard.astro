---
import type { BlogPost } from '../../utils/blog';
import { calculateReadingTime } from '../../utils/blog';
import TagList from './TagList.astro';

interface Props {
  post: BlogPost;
}

const { post } = Astro.props;
const { title, description, preview, pubDate, category, tags, heroImage, heroImageAlt } =
  post.data;
const readingTime = calculateReadingTime(post.body);

const formattedDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short',
  day: 'numeric',
});
---

<article class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow" transition:name={`post-${post.slug}`}>
  {
    heroImage && (
      <figure>
        <img
          src={heroImage}
          alt={heroImageAlt || title}
          class="w-full h-48 object-cover"
        />
      </figure>
    )
  }
  <div class="card-body flex flex-col">
    <div class="flex flex-col gap-2 mb-2">
      <div class="flex items-center gap-2 text-sm text-base-content/60">
        <time datetime={pubDate.toISOString()}>{formattedDate}</time>
        <span>â€¢</span>
        <span>{readingTime} min read</span>
      </div>
      <div>
        <a
          href={`/blog/category/${category.toLowerCase()}`}
          class="badge badge-primary badge-sm"
        >
          {category}
        </a>
      </div>
    </div>

    <h2 class="card-title mb-3">
      <a href={`/blog/${post.slug}`} class="hover:text-primary transition-colors">
        {title}
      </a>
    </h2>

    <div
      class="text-base-content/80 overflow-hidden"
      style="display: -webkit-box !important; -webkit-box-orient: vertical !important; -webkit-line-clamp: 5 !important;"
    >
      {preview || description}
    </div>

    <div class="flex-grow"></div>

    <div class="mt-4 space-y-3">
      <TagList tags={tags} />
      <div class="flex justify-end">
        <a href={`/blog/${post.slug}`} class="btn btn-primary btn-sm">
          Read More
        </a>
      </div>
    </div>
  </div>
</article>
