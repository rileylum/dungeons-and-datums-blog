---
import { getPublishedPosts } from '../../utils/blog';

const posts = await getPublishedPosts();
const searchData = posts.map((post) => ({
  slug: post.slug,
  title: post.data.title,
  description: post.data.description,
  category: post.data.category,
  tags: post.data.tags,
  content: post.body.substring(0, 500),
}));
---

<div class="form-control">
  <div class="input-group">
    <input
      type="text"
      id="search-input"
      placeholder="Search posts..."
      class="input input-bordered w-full"
    />
    <button class="btn btn-square btn-primary" id="search-button">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
      </svg>
    </button>
  </div>
</div>

<div id="search-results" class="mt-4 hidden">
  <h3 class="text-xl font-bold mb-4">Search Results</h3>
  <div id="results-container" class="space-y-4"></div>
</div>

<script>
  import Fuse from 'fuse.js';

  const searchData = JSON.parse(
    document.getElementById('search-data')?.textContent || '[]'
  );

  const fuse = new Fuse(searchData, {
    keys: [
      { name: 'title', weight: 3 },
      { name: 'description', weight: 2 },
      { name: 'tags', weight: 1.5 },
      { name: 'category', weight: 1 },
      { name: 'content', weight: 0.5 },
    ],
    threshold: 0.4,
    includeScore: true,
  });

  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const searchButton = document.getElementById('search-button');
  const resultsContainer = document.getElementById('results-container');
  const searchResults = document.getElementById('search-results');

  const performSearch = () => {
    if (!searchInput || !resultsContainer || !searchResults) return;

    const query = searchInput.value.trim();

    if (!query) {
      searchResults.classList.add('hidden');
      return;
    }

    const results = fuse.search(query);

    if (results.length === 0) {
      resultsContainer.innerHTML =
        '<p class="text-base-content/60">No results found.</p>';
    } else {
      resultsContainer.innerHTML = results
        .slice(0, 10)
        .map(
          (result) => `
        <article class="card bg-base-100 shadow-md">
          <div class="card-body">
            <h4 class="card-title">
              <a href="/blog/${result.item.slug}" class="hover:text-primary">
                ${result.item.title}
              </a>
            </h4>
            <p class="text-sm text-base-content/80">${result.item.description}</p>
            <div class="flex gap-2 mt-2">
              <span class="badge badge-primary badge-sm">${result.item.category}</span>
              ${result.item.tags.map((tag: string) => `<span class="badge badge-outline badge-sm">#${tag}</span>`).join('')}
            </div>
          </div>
        </article>
      `
        )
        .join('');
    }

    searchResults.classList.remove('hidden');
  };

  searchButton?.addEventListener('click', performSearch);
  searchInput?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      performSearch();
    }
  });
</script>

<script id="search-data" type="application/json" set:html={JSON.stringify(searchData)} />
